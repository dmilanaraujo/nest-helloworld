# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Action {
  id: String!
  name: String!
  description: String!
}

type Role {
  id: String!
  name: String!
  actions: [Action!]
}

type User {
  id: String!
  username: String!
  password: String!
  email: String!
  roles: [Role!]
}

"""Users List Output"""
type PaginatedUsersResponse {
  items: [User!]
  total: Int!
  count: Float!
}

type Park {
  id: String!
  name: String!
}

type Trace {
  id: String!
  email: String!
  ip: String!
  functionality: String!
  status: String!
  date: String!
}

"""Users List Output"""
type PaginatedTracesResponse {
  items: [Trace!]
  total: Int!
  count: Float!
}

type Graphic {
  id: String!
  name: String!
}

type Dashboard {
  id: String!
  name: String!
  roles: [Graphic!]
}

type Query {
  users(filters: FilterUserInput): [User!]!
  users_export(format: String = "pdf", filters: FilterUserInput): String!
  users_paginate(pagination: PaginationUsersInput, filters: FilterUserInput): PaginatedUsersResponse!
  user(id: String!): User!
  me: User!
  roles: [Role!]!
  role(id: String!): Role!
  parks: [Park!]!
  park(id: Int!): Park!
  traces: [Trace!]!
  trace(id: String!): Trace!
  traces_export(format: String = "pdf", filters: FilterTraceInput): String!
  traces_paginate(pagination: PaginationTracesInput, filters: FilterTraceInput): PaginatedTracesResponse!
  dashboard(id: Int!): Dashboard!
}

input FilterUserInput {
  username: String
  email: String
}

input PaginationUsersInput {
  limit: Int = 20
  skip: Int = 0
  keywords: String
  sort: String = "-id"
}

input FilterTraceInput {
  """Example field (placeholder)"""
  exampleField: Int
}

input PaginationTracesInput {
  limit: Int = 20
  skip: Int = 0
  keywords: String
  sort: String = "-id"
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): Boolean!
  assignUserRol(roleId: String!, userId: String!): User!
  unassignUserRol(roleId: String!, userId: String!): User!
  createRole(createRoleInput: CreateRoleInput!): Role!
  updateRole(updateRoleInput: UpdateRoleInput!): Role!
  removeRole(id: String!): Boolean!
  assignRolActions(updateRoleInput: UpdateRoleInput!): Role!
  createPark(createParkInput: CreateParkInput!): Park!
  updatePark(updateParkInput: UpdateParkInput!): Park!
  removePark(id: Int!): Park!
  createTrace(createTraceInput: CreateTraceInput!): Trace!
  updateTrace(updateTraceInput: UpdateTraceInput!): Trace!
  removeTrace(id: String!): Trace!
  createDashboard(createDashboardInput: CreateDashboardInput!): Dashboard!
  updateDashboard(updateDashboardInput: UpdateDashboardInput!): Dashboard!
  removeDashboard(id: Int!): Dashboard!
}

input CreateUserInput {
  username: String!
  password: String!
  email: String!
}

input UpdateUserInput {
  username: String
  password: String
  email: String
  id: String!
}

input CreateRoleInput {
  name: String!
}

input UpdateRoleInput {
  name: String
  id: String!
  actionsName: [String!]!
}

input CreateParkInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateParkInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateTraceInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateTraceInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: String!
}

input CreateDashboardInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateDashboardInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}
